name: CI Pipeline

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Set up PHP (untuk project Laravel)
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'  # Ganti sesuai dengan versi PHP yang kamu gunakan
        extensions: mbstring, bcmath, xml, curl  # Tambahkan extension PHP yang dibutuhkan project

    # 3. Install dependencies
    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --optimize-autoloader

    # 4. Set environment variables
    - name: Set environment variables
      run: |
        echo "APP_ENV=testing" >> .env
        echo "MIDTRANS_SERVER_KEY=${{ secrets.MIDTRANS_SERVER_KEY }}" >> .env  # Pastikan MIDTRANS_SERVER_KEY sudah ada di GitHub Secrets
        echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env  # Pastikan APP_KEY sudah ada di GitHub Secrets

    # 5. Run tests (sesuaikan dengan testing framework yang digunakan)
    - name: Run tests
      run: |
        php artisan migrate --env=testing  # Jika project Laravel dan menggunakan database testing
        php artisan test  # Menjalankan test Laravel

    # 6. Cache vendor (opsional, untuk mempercepat build berikutnya)
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    # 7. Lakukan deploy atau tindakan lain setelah sukses (misalnya ke Railway atau server lain)
    - name: Deploy to Railway (opsional)
      run: |
        curl -X POST https://api.railway.app/v1/deploy \
          -H "Authorization: Bearer ${{ secrets.RAILWAY_API_KEY }}"  # Pastikan Railway API Key sudah disimpan di GitHub Secrets
